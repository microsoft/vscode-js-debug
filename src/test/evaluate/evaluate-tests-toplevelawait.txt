Evaluating: 'await Promise.resolve(1)'
stdout> [32mâ†³ 1[0m

Evaluating: '{a:await Promise.resolve(1)}'
stdout> [32mâ†³ {a: 1}[0m  //  named=2

Evaluating: '$_'
stdout> [32mâ†³ {a: 1}[0m  //  named=2

Evaluating: 'let {a,b} = await Promise.resolve({a: 1, b:2}), f = 5;'
stdout> [32mâ†³ undefined[0m

Evaluating: 'a'
stdout> [32mâ†³ 1[0m

Evaluating: 'b'
stdout> [32mâ†³ 2[0m

Evaluating: 'let c = await Promise.resolve(2)'
stdout> [32mâ†³ undefined[0m

Evaluating: 'c'
stdout> [32mâ†³ 2[0m

Evaluating: 'let d;'
stdout> [32mâ†³ undefined[0m

Evaluating: 'd'
stdout> [32mâ†³ undefined[0m

Evaluating: 'let [i,{abc:{k}}] = [0,{abc:{k:1}}];'
stdout> [32mâ†³ undefined[0m

Evaluating: 'i'
stdout> [32mâ†³ 0[0m

Evaluating: 'k'
stdout> [32mâ†³ 1[0m

Evaluating: 'var l = await Promise.resolve(2);'
stdout> [32mâ†³ undefined[0m

Evaluating: 'l'
stdout> [32mâ†³ 2[0m

Evaluating: 'foo(await koo());'
stdout> [32mâ†³ 4[0m

Evaluating: '$_'
stdout> [32mâ†³ 4[0m

Evaluating: 'const m = foo(await koo());'
stdout> [32mâ†³ undefined[0m

Evaluating: 'm'
stdout> [32mâ†³ 4[0m

Evaluating: 'const n = foo(await
koo());'
stdout> [32mâ†³ undefined[0m

Evaluating: 'n'
stdout> [32mâ†³ 4[0m

Evaluating: '`status: ${(await Promise.resolve({status:200})).status}`'
stdout> [32mâ†³ 'status: 200'[0m

Evaluating: 'for (let i = 0; i < 2; ++i) await i'
stdout> [32mâ†³ undefined[0m

Evaluating: 'for (let i = 0; i < 2; ++i) { await i }'
stdout> [32mâ†³ undefined[0m

Evaluating: 'await 0'
stdout> [32mâ†³ 0[0m

Evaluating: 'await 0;function foo(){}'
stdout> [32mâ†³ undefined[0m

Evaluating: 'foo'
stdout> [32mâ†³ Æ’ foo(){}[0m  //  named=8

Evaluating: 'class Foo{}; await 1;'
stdout> [32mâ†³ 1[0m

Evaluating: 'Foo'
stdout> [32mâ†³ class Foo{}[0m  //  named=10

Evaluating: 'await 0;function* gen(){}'
stdout> [32mâ†³ undefined[0m

Evaluating: 'for (var i = 0; i < 10; ++i) { await i; }'
stdout> [32mâ†³ undefined[0m

Evaluating: 'i'
stdout> [32mâ†³ 10[0m

Evaluating: 'for (let j = 0; j < 5; ++j) { await j; }'
stdout> [32mâ†³ undefined[0m

Evaluating: 'j'
stderr> â†³ Uncaught ReferenceError: j is not defined
stderr> â†³ Uncaught ReferenceError: j is not defined  //  named=1

Evaluating: 'gen'
stdout> [32mâ†³ Æ’* gen(){}[0m  //  named=11

Evaluating: 'await 5; return 42;'
stderr> â†³ Uncaught SyntaxError: await is only valid in async function
stderr> â†³ Uncaught SyntaxError: await is only valid in async function

Evaluating: 'let o = await 1, p'
stdout> [32mâ†³ undefined[0m

Evaluating: 'p'
stdout> [32mâ†³ undefined[0m

Evaluating: 'let q = 1, s = await 2'
stdout> [32mâ†³ undefined[0m

Evaluating: 's'
stdout> [32mâ†³ 2[0m

Evaluating: 'await {...{foo: 42}}'
stdout> [32mâ†³ {foo: 42}[0m  //  named=2

